{"version":3,"sources":["component/Navbar.jsx","component/Main.jsx","component/Add_table.jsx","component/Table.jsx","component/Edit_table.jsx","component/Test.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Fragment","CssBaseline","AppBar","elevation","className","this","props","classes","Toolbar","toolbar","header","Link","variant","href","style","fontSize","React","Component","withStyles","theme","html","margin","padding","ul","listStyle","backgroundColor","palette","primary","main","boxShadow","display","alignItems","flexWrap","justifyContent","spacing","breakpoints","down","color","textDecoration","Main","_getData","a","axios","get","res","setState","table","data","_delete","el","window","confirm","table_title","target","id","method","headers","Headers","alert","location","reload","state","console","log","Grid","item","xs","addButton","Button","size","TableContainer","component","Paper","tableCont","aria-label","TableHead","TableRow","TableCell","align","TableBody","length","map","key","view_url","link","onClick","tableBody","table_autor","format","date","createdAt","dltButton","marginTop","marginRight","dark","height","width","borderRadius","overflow","editButton","warning","light","secondary","cursor","Add_table","_addTable","e","table_text","preventDefault","value","container","box","onSubmit","TextField","label","input","onChange","_titleUpdate","_autorUpdate","editor","ClassicEditor","onReady","event","getData","_textUpdate","onBlur","onFocus","type","flexDirection","border","Table","match","params","edit_view_url","editlink","editBtn","tableHeader","Typography","tableContent","borderTop","Edit_table","titleChange","autorChange","textChange","_save","modify","newTable","name","Test","_modify","prompt","dataToModify","_modifyMulti","targetId","targetName","newName","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7658173b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {CssBaseline, \r\n  AppBar, \r\n  Toolbar, \r\n  Link,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\n\r\nconst styles = theme => ({\r\n  '@global':{\r\n    html:{\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  AppBar:{\r\n    backgroundColor: theme.palette.primary.main,\r\n    boxShadow: 'none'\r\n  },\r\n  header:{\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  toolbar:{\r\n    flexWrap: 'nowrap',\r\n    justifyContent: 'space-between',\r\n    margin: theme.spacing(0, 15),\r\n    [theme.breakpoints.down('xs')]:{\r\n      justifyContent: \"center\"\r\n    }\r\n  },\r\n  Link:{\r\n    color: 'white',\r\n    fontSize: 28,\r\n    margin: theme.spacing(3),\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    '&:hover': {\r\n      textDecoration: 'none'\r\n   },\r\n  },\r\n});\r\n\r\nclass Navbar extends React.Component {\r\n  \r\n  render() {\r\n      return(\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n            <AppBar elevation={0} className={this.props.classes.AppBar}>\r\n              <Toolbar  className={this.props.classes.toolbar}>\r\n                <navbar className={this.props.classes.header}>\r\n                  <Link variant=\"button\" href=\"/\" className={this.props.classes.Link} >\r\n                    <DashboardIcon style={{fontSize:'30px'}}/>Dashboard\r\n                  </Link>\r\n                </navbar>\r\n              </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n      )\r\n  };\r\n};\r\n\r\n\r\nexport default withStyles(styles)(Navbar);","import React, { Fragment } from \"react\";\r\nimport axios from 'axios';\r\nimport {CssBaseline, \r\n  Link,\r\n  Grid,\r\n  TableContainer, \r\n  Paper,\r\n  Table, \r\n  TableCell, \r\n  TableHead,\r\n  TableRow, \r\n  TableBody,\r\n  Button} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Navbar from \"./Navbar.jsx\";\r\nimport Moment from 'react-moment';\r\n\r\nconst styles = theme => ({\r\n  '@global':{\r\n    html:{\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  addButton:{\r\n    marginTop:\"180px\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    marginRight: \"20%\",\r\n    [theme.breakpoints.down('sm')]:{\r\n      marginRight: \"2.5%\",\r\n    }\r\n  },\r\n  Button:{\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  main:{\r\n    marginTop:\"10px\",\r\n    display: \"flex\",\r\n    justifyContent:\"center\",\r\n    height: \"1000px\"\r\n  },\r\n  tableCont:{\r\n    width:\"60%\",\r\n    borderRadius: \"10px\",\r\n    overflow: \"auto\",\r\n    [theme.breakpoints.down('sm')]:{\r\n      width:\"95%\",\r\n    }\r\n  },\r\n  editButton:{\r\n      backgroundColor: theme.palette.warning.light,\r\n      marginRight: '0.1rem',\r\n      color:'white'\r\n  },\r\n  dltButton:{\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color:'white',\r\n  },\r\n  tableBody:{\r\n    cursor: 'pointer'\r\n  }\r\n});\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      table : [],\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._getData();\r\n  }\r\n\r\n  _getData = async () => {\r\n    const res = await axios.get('/get/table');\r\n    this.setState({ \r\n      table : res.data\r\n    })\r\n  }\r\n\r\n  _delete = async (el) => {\r\n    const remove = window.confirm(el.table_title + '을 삭제하시겠습니까?');\r\n\r\n    if(remove) {\r\n      const target = { id : el.id }\r\n      const res = await axios('/delete/table', {\r\n        method : 'POST',\r\n        data : { 'delete' : target },\r\n        headers: new Headers()\r\n      })\r\n      \r\n      if(res.data) {\r\n        alert('데이터를 삭제했습니다.')\r\n        return window.location.reload();\r\n      }\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { table } = this.state;\r\n    \r\n    console.log('table',table)\r\n      return(\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n            <Navbar/>\r\n            <Grid item xs={12} className={this.props.classes.addButton}>\r\n                <Link href=\"/add_table\">\r\n                    <Button variant=\"contained\"  size=\"large\" color=\"primary\" className={this.props.classes.Button}>\r\n                        <CreateIcon fontSize=\"small\" />&nbsp;글쓰기\r\n                    </Button>\r\n                </Link>\r\n            </Grid>\r\n            <Grid item xs={12} className={this.props.classes.main}>\r\n              <TableContainer component={Paper} className={this.props.classes.tableCont}>\r\n                <Table className={this.props.classes.table} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align='center'>번호</TableCell>\r\n                      <TableCell align='left'>제목</TableCell>\r\n                      <TableCell align='left'>글쓴이</TableCell>\r\n                      <TableCell align='left'>등록일</TableCell>\r\n                      <TableCell align='center'>기능</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  {table.length !== 0 ? \r\n                    table.map( (el, key) => {\r\n                      const view_url = 'table/'+el.id;\r\n                      const link = () =>{\r\n                        return window.location.href=view_url;\r\n                      }\r\n                      // const edit_view_url = 'edit_table/'+el.id;\r\n                      // const editlink = () =>{\r\n                      //   return window.location.href=edit_view_url;\r\n                      // }\r\n                      // console.log('el',el)\r\n                      return(\r\n                          <TableRow key={key}>\r\n                            <TableCell  align='center' onClick={link} className={this.props.classes.tableBody}>{el.id}</TableCell>\r\n                            <TableCell  align='left' onClick={link} className={this.props.classes.tableBody}>{el.table_title}</TableCell>\r\n                            <TableCell  align='left' onClick={link} className={this.props.classes.tableBody}>{el.table_autor}</TableCell>\r\n                            <TableCell  align='left' onClick={link} className={this.props.classes.tableBody}><Moment format=\"YYYY-MM-DD\" date={el.createdAt}/></TableCell>\r\n                            <TableCell  align='center'>\r\n                              {/* <Button className={this.props.classes.editButton} onClick={editlink}>Edit</Button> */}\r\n                              <Button className={this.props.classes.dltButton} onClick={() => this._delete(el)}>Delete</Button>\r\n                            </TableCell>\r\n                          </TableRow>\r\n\r\n                      )\r\n                    })\r\n                    : <Fragment>데이터가 없습니다.</Fragment>}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n        </React.Fragment>\r\n      )\r\n  };\r\n};\r\n\r\n\r\nexport default withStyles(styles)(Main);","import React from \"react\";\r\nimport axios from 'axios';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport {CssBaseline, \r\n  Grid,\r\n  TextField,\r\n  Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Navbar from \"./Navbar.jsx\"\r\nimport '../App.css';\r\n\r\nconst styles = theme => ({\r\n  '@global':{\r\n    html:{\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  container:{\r\n      marginTop: \"230px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n  },\r\n  box:{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    border: \"solid 1px #90a4ae\",\r\n    borderRadius:'10px',\r\n    width: \"60%\",\r\n    padding: theme.spacing(2, 2),\r\n    [theme.breakpoints.down('sm')]:{\r\n      width:\"95%\",\r\n    }\r\n  },\r\n  input:{\r\n    margin: theme.spacing(1 , 0)\r\n  },\r\n  editor:{\r\n    margin: theme.spacing(1 , 0)\r\n  },\r\n  Button:{\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: 'white',\r\n    fontSize: \"1.4rem\",\r\n    marginTop:\"20px\"\r\n  }\r\n});\r\n\r\nclass Add_table extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n        table_title:\"\",\r\n        table_autor:\"\",\r\n        table_text:\"\"\r\n    }\r\n  };\r\n\r\n  _addTable = async(e) => {\r\n    const { table_title, table_autor,table_text } = this.state;\r\n    e.preventDefault();\r\n\r\n    const res = await axios('/add/table', {\r\n      method : 'POST',\r\n      data : { \r\n        'table_title' : table_title,\r\n        'table_autor' : table_autor,\r\n        'table_text' : table_text\r\n     },\r\n      headers: new Headers()\r\n    });\r\n\r\n    if(res.data) {\r\n      alert('등록되었습니다.');\r\n      return window.location.href=\"/\";\r\n    }\r\n  }\r\n  \r\n  _titleUpdate(e) {\r\n    this.setState({ table_title : e.target.value })\r\n  }\r\n  _autorUpdate(e) {\r\n    this.setState({ table_autor : e.target.value })\r\n  }\r\n  _textUpdate(data) {\r\n    this.setState({ table_text : data })}\r\n\r\n  \r\n  render() {\r\n      return(\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n            <Navbar/>\r\n            <Grid item xs={12} className={this.props.classes.container}>\r\n                <form className={this.props.classes.box}  onSubmit={this._addTable}>\r\n                    <TextField label=\"글제목\" variant=\"outlined\" className={this.props.classes.input} onChange={(e) => this._titleUpdate(e)}></TextField>\r\n                    <TextField label=\"글쓴이\" variant=\"outlined\" className={this.props.classes.input} onChange={(e) => this._autorUpdate(e)}></TextField>\r\n                    <CKEditor\r\n                        editor={ ClassicEditor }\r\n                        onReady={ editor => {\r\n                            // You can store the \"editor\" and use when it is needed.\r\n                            console.log( 'Editor is ready to use!', editor );\r\n                        } }\r\n                        onChange={ ( event, editor ) => {\r\n                            const data = editor.getData();\r\n                            this._textUpdate(data);\r\n                            console.log( { event, editor, data } );\r\n                        } }\r\n                        onBlur={ ( event, editor ) => {\r\n                            console.log( 'Blur.', editor );\r\n                        } }\r\n                        onFocus={ ( event, editor ) => {\r\n                            console.log( 'Focus.', editor );\r\n                        } }\r\n                    />\r\n                    <Button type=\"submit\" variant=\"contained\" className={this.props.classes.Button}>\r\n                        등록\r\n                    </Button>\r\n                </form>\r\n            </Grid>\r\n        </React.Fragment>\r\n      )\r\n  };\r\n};\r\n\r\n\r\nexport default withStyles(styles)(Add_table);","import React, {Fragment} from \"react\";\r\nimport axios from 'axios';\r\nimport {CssBaseline, \r\n    Typography ,  \r\n    Grid,\r\n    Button,\r\n    } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Navbar from \"./Navbar.jsx\";\r\nimport Moment from 'react-moment';\r\n\r\nconst styles = theme => ({\r\n  '@global':{\r\n    html:{\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  addButton:{\r\n    margin:\"180px 0 10px 0\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    marginRight: \"20%\",\r\n    [theme.breakpoints.down('sm')]:{\r\n      marginRight: \"2.5%\",\r\n    }\r\n  },\r\n  editBtn:{\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: 'white',\r\n  },\r\n  container:{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  tableHeader:{\r\n      width: '60%',\r\n      border: 'solid 1px #90a4ae',\r\n      padding: '20px',\r\n      [theme.breakpoints.down('sm')]:{\r\n        width:\"95%\",\r\n      }\r\n  },\r\n  tableContent:{\r\n      width: '60%',\r\n      border: 'solid 1px #90a4ae',\r\n      borderTop: 'none',\r\n      padding: '20px',\r\n      height:'500px',\r\n      [theme.breakpoints.down('sm')]:{\r\n        width:\"95%\",\r\n      }\r\n  },\r\n});\r\n\r\nclass Table extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n        table:[],\r\n        id:props.match.params.id\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._getData();\r\n  }\r\n\r\n  _getData = async () => {\r\n    const res = await axios.get('/table/'+this.state.id);\r\n    this.setState({ \r\n      table : res.data\r\n    })\r\n  }\r\n  editlink(){\r\n    const edit_view_url = '/edit_table/'+this.state.id;\r\n    return window.location.href=edit_view_url;\r\n  }\r\n\r\n\r\n  \r\n  render() {\r\n    const { table } = this.state;\r\n      return(\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n            <Navbar/>\r\n            <Grid item xs={12} className={this.props.classes.addButton}>\r\n              <Button variant=\"contained\"  size=\"large\" onClick={() => this.editlink()} className={this.props.classes.editBtn}>\r\n                  수정\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} className={this.props.classes.container}>\r\n                {table != null ?\r\n                          <Fragment>\r\n                            <Grid item xs={12} className={this.props.classes.tableHeader}>\r\n                                <Typography variant=\"h4\" >{table.table_title} </Typography >\r\n                                <Typography style={{marginTop: '1rem'}} variant=\"body1\" >{table.table_autor} | <Moment format=\"YYYY-MM-DD\" date={table.createdAt}/> </Typography >\r\n                            </Grid>\r\n                            <Grid item xs={12} className={this.props.classes.tableContent}>\r\n                                <Typography >{table.table_text}</Typography >\r\n                            </Grid>\r\n                          </Fragment>\r\n                      \r\n                    : <Fragment>데이터가 없습니다.</Fragment>}\r\n            </Grid>\r\n        </React.Fragment>\r\n      )\r\n  };\r\n};\r\n\r\n\r\nexport default withStyles(styles)(Table);","import React, { Fragment } from \"react\";\r\nimport axios from 'axios';\r\nimport {CssBaseline, \r\n    TextField,  \r\n    Grid,\r\n    Button,\r\n    } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Navbar from \"./Navbar.jsx\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport Moment from 'react-moment';\r\n\r\nconst styles = theme => ({\r\n  '@global':{\r\n    html:{\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  addButton:{\r\n    margin:\"180px 0 10px 0\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    marginRight: \"20%\",\r\n    [theme.breakpoints.down('sm')]:{\r\n      marginRight: \"2.5%\"\r\n    }\r\n  },\r\n  editBtn:{\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: 'white',\r\n  },\r\n  container:{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  tableHeader:{\r\n      width: '60%',\r\n      border: 'solid 1px #90a4ae',\r\n      padding: '20px',\r\n      [theme.breakpoints.down('sm')]:{\r\n        width:\"95%\",\r\n      }\r\n  },\r\n  tableContent:{\r\n      width: '60%',\r\n      border: 'solid 1px #90a4ae',\r\n      borderTop: 'none',\r\n      padding: '20px',\r\n      height:'500px',\r\n      overflow: \"none\",\r\n      [theme.breakpoints.down('sm')]:{\r\n        width:\"95%\",\r\n      }\r\n  },\r\n});\r\n\r\nclass Edit_table extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n        table:[],\r\n        newTable:[],\r\n        id:props.match.params.id\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._getData();\r\n  }\r\n\r\n  _getData = async () => {\r\n    const res = await axios.get('/table/'+this.state.id);\r\n    this.setState({ \r\n      table : res.data\r\n    })\r\n  }\r\n\r\n  titleChange = (e) => {\r\n      console.log('asdasd',this.state.table)\r\n      this.setState({\r\n        ...this.state,\r\n        table:{\r\n          ...this.state.table,\r\n          table_title: e.target.value\r\n        }\r\n      });\r\n  };\r\n  autorChange = (e) => {\r\n    console.log('asdasd',this.state.table)\r\n    this.setState({\r\n      ...this.state,\r\n      table:{\r\n        ...this.state.table,\r\n        table_autor: e.target.value\r\n      }\r\n    });\r\n  };\r\n  textChange = (data) => {\r\n    console.log('asdasd',this.state.table)\r\n    this.setState({\r\n      ...this.state,\r\n      table:{\r\n        ...this.state.table,\r\n        table_text: data\r\n      }\r\n    });\r\n  };\r\n\r\n_save = async () => {\r\n    const table_title = this.state.table;\r\n\r\n    const modify = {\r\n        table_title: table_title,\r\n        id: this.state.id\r\n    }\r\n\r\n    const res = await axios('/save/table_data', {\r\n        method: 'POST',\r\n        data: {\r\n            'modify': modify,\r\n        },\r\n        headers: new Headers()\r\n    })\r\n    console.log('res',res.data);\r\n    if (res.data) {\r\n        alert('저장하였습니다.')\r\n        return window.location.href = '/table/'+this.state.id;\r\n    }\r\n}\r\n  \r\n  render() {\r\n\r\n    const { table } = this.state;\r\n      return(\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n            <Navbar/>\r\n            <Grid item xs={12} className={this.props.classes.addButton}>\r\n                <Button variant=\"contained\"  size=\"large\" className={this.props.classes.editBtn} onClick={()=>this._save() }>\r\n                    완료\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12} className={this.props.classes.container}>\r\n                {table != null ?\r\n                          <Fragment>\r\n                            <Grid item xs={12} className={this.props.classes.tableHeader}>\r\n                                <TextField style={{width:'100%'}} id=\"table_title\" name=\"table_title\" onChange={this.titleChange} value={table.table_title}/>\r\n                                <TextField id=\"table_autor\" name=\"table_autor\" onChange={this.autorChange} value={table.table_autor} style={{marginTop: '1rem'}}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} className={this.props.classes.tableContent}>\r\n                                <CKEditor\r\n                                    editor={ ClassicEditor }\r\n                                    onReady={ editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                        console.log( 'Editor is ready to use!', editor );\r\n                                    } }\r\n                                    onChange={ ( event, editor ) => {\r\n                                        const data = editor.getData();\r\n                                        this.textChange(data);\r\n                                        console.log( { event, editor, data } );\r\n                                    } }\r\n                                    data={table.table_text}\r\n                                    onBlur={ ( event, editor ) => {\r\n                                        console.log( 'Blur.', editor );\r\n                                    } }\r\n                                    onFocus={ ( event, editor ) => {\r\n                                        console.log( 'Focus.', editor );\r\n                                    } }\r\n                                />\r\n                            </Grid>\r\n                          </Fragment>\r\n                      \r\n                    : <Fragment>데이터가 없습니다.</Fragment>}\r\n            </Grid>\r\n        </React.Fragment>\r\n      )\r\n  };\r\n};\r\n\r\n\r\nexport default withStyles(styles)(Edit_table);","import React, { Component, Fragment } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass Test extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      table : [],\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._getData();\r\n  }\r\n\r\n  _getData = async () => {\r\n    const res = await axios.get('/get/table');\r\n    this.setState({ \r\n      table : res.data\r\n    })\r\n  }\r\n\r\n  // 이후 추가할 코드영역\r\n  _modify = async (el) => {\r\n    const modify = prompt(el.table_title + '의 변경할 이름을 입력해주세요.')\r\n\r\n    if(modify !== null) {\r\n      const dataToModify = {\r\n        table_title : modify,\r\n        id : el.id\r\n      }\r\n\r\n      const res = await axios('/modify/data', {\r\n        method : 'POST',\r\n        data : { 'modify' : dataToModify },\r\n        headers: new Headers()\r\n      })\r\n\r\n      if(res.data) {\r\n        console.log(res.data[0]);\r\n        alert('이름이 수정되었습니다.')\r\n        return window.location.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  //////////////////////////////////////////////\r\n  _modifyMulti = async (el) => {\r\n    const targetId = prompt('변경할 대상 ID를 입력해주세요.')\r\n    const targetName = prompt('변경할 대상 이름을 입력해주세요.')\r\n    const newName = prompt('변경할 대상들의 새로운 이름을 입력해주세요.')\r\n\r\n    if(newName !== null) {\r\n      const dataToModify = {\r\n        targetId : targetId,\r\n        targetName : targetName,\r\n        newName : newName\r\n      }\r\n\r\n      const res = await axios('/modify/multiData', {\r\n        method : 'POST',\r\n        data : { 'modify' : dataToModify },\r\n        headers: new Headers()\r\n      })\r\n\r\n      if(res.data) {\r\n        console.log(res.data[0]);\r\n        alert('요청하신 대상들의 이름이 수정되었습니다.')\r\n        return window.location.reload();\r\n      }\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { table } = this.state;\r\n\r\n    return(\r\n      <Fragment className='App'>\r\n        <h3>Hello, You are testing React!</h3>\r\n\r\n        <h4> Sample1 List </h4>\r\n\r\n        {table.length !== 0 ? \r\n        table.map( (el, key) => {\r\n          return(\r\n            <Fragment key={key}>\r\n              <span> ID: {el.id} </span>/\r\n              <span> NAME: {el.table_title} </span>/\r\n              <span> EMAIL: {el.table_autor} </span>\r\n              <button onClick={() => this._modify(el)}>modify</button>\r\n            </Fragment>\r\n          )\r\n        })\r\n        : <Fragment>데이터가 없습니다.</Fragment>}\r\n\t\t\r\n        <button onClick={this._modifyMulti}>modify 여러개</button>\r\n      </Fragment> \r\n    )\r\n  };\r\n};\r\n\r\n\r\nexport default Test;","import React, {Fragment} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport Main from \"./component/Main.jsx\"\nimport Add_table from \"./component/Add_table.jsx\"\nimport Table from \"./component/Table.jsx\"\nimport Edit_table from \"./component/Edit_table.jsx\"\nimport Test from \"./component/Test.jsx\"\n\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      table : [],\n    }\n  };\n\n  \n  render() {\n      return(\n        <Fragment>\n          <Router>\n            <Route path='/' exact={true} component={Main} />\n              <Switch>\n                <Route path=\"/add_table\" component={Add_table} />\n                <Route path=\"/table/:id\" component={Table} />\n                <Route path=\"/edit_table/:id\" component={Edit_table} />\n                <Route path=\"/test\" component={Test} />\n              </Switch>\n          </Router>\n        </Fragment>\n      )\n  };\n};\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}